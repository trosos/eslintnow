--- ./node_modules/core-js-pure/modules/es.number.constructor.js	2023-12-22 20:09:34.869924320 +0100
+++ ./node_modules/core-js-pure/modules/es.number.constructor.js	2023-12-23 18:02:25.876785394 +0100
@@ -49,6 +49,7 @@
       switch (charCodeAt(it, 1)) {
         case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i
         case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i
+        case 88: case 120: radix = 16; maxCode = 102; break; // some JavaScript engines have bogus implementation of +"0x1_"
         default: return +it;
       }
       digits = stringSlice(it, 2);
@@ -58,6 +59,7 @@
         // parseInt parses a string to a first unavailable symbol
         // but ToNumber should return NaN if a string contains unavailable symbols
         if (code < 48 || code > maxCode) return NaN;
+        if (radix === 16 && (code > 57 && code < 65 || code > 70 && code < 97)) return NaN;
       } return parseInt(digits, radix);
     }
   } return +it;
